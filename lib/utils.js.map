{"version":3,"sources":["../scripts/utils.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,a;;AAEA,OAAO,WAAP,GAAqB,OAAO,WAAP,IAAsB,EAA3C;;;;;AAKA,YAAY,aAAZ;;;;OAAA;AAK4B,WAL5B,EAKqC;AACjC,UAAI,mBAAmB,MAAvB,EAA+B;AAC7B,kBAAU,QAAQ,CAAR,CAAV,CACD;;AACD,UAAI,QAAQ,cAAZ,EAA4B;AAC1B,gBAAQ,cAAR,CAAuB,aAAvB;AACA,gBAAQ,cAAR,CAAuB,gBAAvB,GACD,CACF;;;;;;OAbH;AAkBuB;AACnB,UAAM,mBAAmB,EAAE,yBAAF,CAAzB;AACA,UAAI,iBAAiB,QAAjB,CAA0B,YAA1B,CAAJ,EAA6C;AAC3C,yBAAiB,KAAjB,GACD,CACF;;;;;;OAvBH;AA4BwB,WA5BxB,EA4BiC;AAC7B,cAAQ,KAAR,GAAgB,EAAhB;AACA,cAAQ,aAAR,CAAsB,iBAAtB,CAAwC,yBAAxC,GACD;;;;;OA/BH;AAoCmC,WApCnC,EAoC4C;AACxC,uBAAiB,iBAAjB,CAAmC,EAAE,gBAAF,EAAoB,OAApB,EAA6B,GAA7B,EAAnC;AACA,UAAM,QAAQ,QAAQ,KAAR,EAAd;AACA,uBAAiB,eAAjB,CAAiC,EAAE,gBAAF,EAAoB,OAApB,EAA6B,GAA7B,EAAjC;AACA,uBAAiB,eAAjB,CAAiC,EAAE,gBAAF,EAAoB,KAApB,EAA2B,GAA3B,EAAjC;AACA,aAAO,KAAP,CACD;;;;;;;;OA1CH;AAkDiC,SAAZ,MAAY,yDAAH,CAAG;AAC7B,UAAM,WAAW,IAAI,EAAE,QAAN,EAAjB;AACA,UAAM,mBAAmB,EAAE,aAAF,CAAzB;AACA,uBAAiB,MAAjB,CAAwB,YAAM;AAC5B,YAAK,OAAO,WAAP,GAAqB,iBAAiB,SAAjB,EAArB,GAAoD,MAArD;AACA,yBAAiB,IAAjB,CAAsB,cAAtB,CADJ,EAC2C;AACzC,kBAAQ,GAAR,CAAY,qBAAZ;AACA,2BAAiB,MAAjB,CAAwB,QAAxB;AACA,mBAAS,OAAT,GACD,CACF,CAPD;;;AAQA,cAAQ,GAAR,CAAY,8BAAZ;AACA,aAAO,SAAS,OAAT,EAAP,CACD;;;;;OA/DH;AAoE4B;AACxB,UAAM,mBAAmB,EAAE,aAAF,CAAzB;AACA,uBAAiB,MAAjB,CAAwB,QAAxB,EACD,CAvEH","file":"utils.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nwindow.friendlyPix = window.friendlyPix || {};\n\n/**\n * Set of utilities to handle Material Design Lite elements.\n */\nfriendlyPix.MaterialUtils = class {\n\n  /**\n   * Refreshes the UI state of the given Material Design Checkbox / Switch element.\n   */\n  static refreshSwitchState(element) {\n    if (element instanceof jQuery) {\n      element = element[0];\n    }\n    if (element.MaterialSwitch) {\n      element.MaterialSwitch.checkDisabled();\n      element.MaterialSwitch.checkToggleState();\n    }\n  }\n\n  /**\n   * Closes the drawer if it is open.\n   */\n  static closeDrawer() {\n    const drawerObfuscator = $('.mdl-layout__obfuscator');\n    if (drawerObfuscator.hasClass('is-visible')) {\n      drawerObfuscator.click();\n    }\n  }\n\n  /**\n   * Clears the given Material Text Field.\n   */\n  static clearTextField(element) {\n    element.value = '';\n    element.parentElement.MaterialTextfield.boundUpdateClassesHandler();\n  }\n\n  /**\n   * Clears the given Material Text Field.\n   */\n  static cloneElementWithTextField(element) {\n    componentHandler.downgradeElements($('.mdl-textfield', element).get());\n    const clone = element.clone();\n    componentHandler.upgradeElements($('.mdl-textfield', element).get());\n    componentHandler.upgradeElements($('.mdl-textfield', clone).get());\n    return clone;\n  }\n\n  /**\n   * Returns a Promise which resolves when the user has reached the bottom of the page while\n   * scrolling.\n   * If an `offset` is specified the promise will resolve before reaching the bottom of\n   * the page by the given amount offset in pixels.\n   */\n  static onEndScroll(offset = 0) {\n    const resolver = new $.Deferred();\n    const mdlLayoutElement = $('.mdl-layout');\n    mdlLayoutElement.scroll(() => {\n      if ((window.innerHeight + mdlLayoutElement.scrollTop() + offset) >=\n          mdlLayoutElement.prop('scrollHeight')) {\n        console.log('Scroll End Reached!');\n        mdlLayoutElement.unbind('scroll');\n        resolver.resolve();\n      }\n    });\n    console.log('Now watching for Scroll End.');\n    return resolver.promise();\n  }\n\n  /**\n   * Stops scroll listeners.\n   */\n  static stopOnEndScrolls() {\n    const mdlLayoutElement = $('.mdl-layout');\n    mdlLayoutElement.unbind('scroll');\n  }\n};\n"]}